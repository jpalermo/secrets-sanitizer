#!/usr/bin/env ruby

# Copyright (C) 2016-Present Pivotal Software, Inc. All rights reserved.
#
# This program and the accompanying materials are made available under
# the terms of the under the Apache License, Version 2.0 (the "License”);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.Copyright (C) 2016-Present Pivotal Software, Inc. # All rights reserved.
#
# This program and the accompanying materials are made available under
# the terms of the under the Apache License, Version 2.0 (the "License”);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


lib = File.expand_path('../../lib', __FILE__)
errors = []
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

require 'optparse'
require 'sanitizer'
require 'yaml'

default_pattern_file = File.expand_path(File.join(File.dirname(__FILE__), "../config/catchall"))

options = SecretsSanitizerOptions.new
logger = Logger.new(STDERR)
logger.level = Logger::DEBUG

Sanitizer::SanitizeExecutor.execute(manifest_path: options[:input][0],
                                    pattern_file: default_pattern_file,
                                    secrets_path: options[:sec_dir],
                                    logger: logger) do |value, path|
  _, stderr, status = Open3.capture3("credhub ")
  # use credhub cli in here to do some stuff
end